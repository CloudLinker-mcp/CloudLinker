image: python:3.11-slim

stages:
  - test
  - docker-build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"
  BUILD_IMAGE: "false"  # Set to "true" to enable Docker build stage

cache:
  paths:
    - .pip-cache/
    - venv/

before_script:
  - python -V
  - python -m venv venv
  - source venv/bin/activate
  - pip install -r backend/requirements.txt

test:
  stage: test
  script:
    - cd backend
    - pytest
  artifacts:
    reports:
      junit: backend/junit.xml
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'

docker-build:
  stage: docker-build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  rules:
    - if: $BUILD_IMAGE == "true"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - |
      if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
        docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
        docker push $CI_REGISTRY_IMAGE:latest
      fi 